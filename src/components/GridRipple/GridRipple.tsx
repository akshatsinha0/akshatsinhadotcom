import React,{useEffect,useRef} from 'react'
import './GridRipple.css'
const GridRipple:React.FC=()=>{const cRef=useRef<HTMLCanvasElement>(null);useEffect(()=>{const c=cRef.current;if(!c)return;const dpr=Math.min(window.devicePixelRatio||1,2);let w=window.innerWidth,h=window.innerHeight;c.width=w*dpr;c.height=h*dpr;c.style.width=w+'px';c.style.height=h+'px';const ctx=c.getContext('2d')!;ctx.scale(dpr,dpr);let ripples:{x:number;y:number;t:number}[]=[];let lastAdd=0;const add=(x:number,y:number)=>{const now=performance.now();if(now-lastAdd<80)return;lastAdd=now;ripples.push({x,y,t:now});if(ripples.length>8)ripples.shift()};const grid=()=>{ctx.strokeStyle='rgba(255,255,255,.06)';ctx.lineWidth=1;const s=40;for(let x=0;x<w;x+=s){ctx.beginPath();ctx.moveTo(x,0);ctx.lineTo(x,h);ctx.stroke()}for(let y=0;y<h;y+=s){ctx.beginPath();ctx.moveTo(0,y);ctx.lineTo(w,y);ctx.stroke()}};const draw=()=>{ctx.clearRect(0,0,w,h);grid();const now=performance.now();ripples.forEach(r=>{const age=(now-r.t)/1000;const r1=age*220;const alpha=Math.max(0,1-age);if(alpha<=0)return;ctx.beginPath();ctx.arc(r.x,r.y,Math.max(0,r1),0,Math.PI*2);ctx.strokeStyle=`rgba(255,255,255,${.12*alpha})`;ctx.lineWidth=2;ctx.stroke();ctx.beginPath();ctx.arc(r.x,r.y,Math.max(0,r1*0.65),0,Math.PI*2);ctx.strokeStyle=`rgba(255,255,255,${.08*alpha})`;ctx.lineWidth=1;ctx.stroke()});raf=requestAnimationFrame(draw)};let raf= requestAnimationFrame(draw);const onMove=(e:MouseEvent)=>add(e.clientX,e.clientY);const onResize=()=>{w=window.innerWidth;h=window.innerHeight;c.width=w*dpr;c.height=h*dpr;c.style.width=w+'px';c.style.height=h+'px';ctx.setTransform(1,0,0,1,0,0);ctx.scale(dpr,dpr)};window.addEventListener('mousemove',onMove,{passive:true});window.addEventListener('resize',onResize);return()=>{window.removeEventListener('mousemove',onMove);window.removeEventListener('resize',onResize);cancelAnimationFrame(raf)}},[]);return(<canvas ref={cRef} className="grid-ripple"/>) }
export default GridRipple
